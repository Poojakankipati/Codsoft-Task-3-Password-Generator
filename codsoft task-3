{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fc43677d-c78a-4242-875b-349c9fc95cd4",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c98fe191-4a28-44ee-9abd-41c63ef7ae58",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "How many passwords do you want to generate?  5\n",
      "Provide the password length:  8\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Password 1: Oh*gY[lB\n",
      "Password 2: Kyy'7L{C\n",
      "Password 3: #fr#tya)\n",
      "Password 4: ^Dj+XN&~\n",
      "Password 5: u:T]w4p\\\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "import string\n",
    "\n",
    "# User input for number of passwords and password length\n",
    "number_of_passwords = int(input(\"How many passwords do you want to generate? \"))\n",
    "password_length = int(input(\"Provide the password length: \"))\n",
    "\n",
    "# Define characters (letters, digits, and punctuation)\n",
    "characters = string.ascii_letters + string.digits + string.punctuation\n",
    "\n",
    "# Generate multiple passwords\n",
    "for password_index in range(number_of_passwords):\n",
    "    password = \"\"\n",
    "    for index in range(password_length):\n",
    "        password += random.choice(characters)\n",
    "    print(f\"Password {password_index + 1}: {password}\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "36ff4211-6063-4d46-a63e-f54017ba2435",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
